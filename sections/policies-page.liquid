{% comment %}
  Policies Page Section
  Dynamic section for displaying policy content in a TV-style design
{% endcomment %}

<style>
  body, html {
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif;
    background: #449ADF url('/public/images/sitemap-bg-pattern.png') repeat-y top center;
    background-size:cover;
  }

  main {
    max-width: 1440px;
    margin: 0 auto;
    padding: 2rem 0 60px 0;
    position: relative;
  }

  /* Title */
  .title-wrap {
    position: relative;
    text-align: center;
    margin-bottom: 1rem;
  }
  .title-wrap h1 {
    padding-top: 20px;
    font-size: 28px;
    line-height: 32px;
    font-weight: bold;
    color: rgb(255, 255, 255);
    margin: 0;
  }
  .title-wrap p, h1, div, span, h2, h3, h4, h5, h6 {
    color:#100f0f; 
  }
  @media(min-width:1024px) {
    .title-wrap h1 {
      font-size: 40px;
      line-height: 44px;
    }
  }

  /* TV Container */
  .tv-container {
    position: relative;
    width: 100%;
    background: url('https://cdn.shopify.com/s/files/1/0897/0148/2800/files/refund-policy-tv-container.avif?v=1755878035') no-repeat center;
    background-size: cover;
    aspect-ratio: 12 / 20;
  }
  
  @media(min-width: 1024px) {
    .tv-container {
      background-size: contain;
      aspect-ratio: 16 / 12; /* Keeps TV aspect ratio for desktop */
    }
  }

  /* Screen Area inside TV */
  .tv-screen {
    position: absolute;
    top: 12%;
    left: 20%;
    right: 21.0%;
    bottom: 25%;
    background: rgb(255 255 255 / 80%);
    border: 1px solid #333;
    box-shadow: inset 0px 4px 8px rgba(0,0,0,0.2);
    overflow: hidden;
    border-radius: 10px;
    padding-bottom:20px;
  }
  
  @media(max-width: 1023px) {
    .tv-screen {
      right: 0 !important;
      left: 0 !important;
    }
    .scroll-content {
      padding: 20px 10px 20px 42px;
    }
  }

  /* Scroll Container */
  .scroll-container {
    position: relative;
    height: 100%;
  }

  .scroll-content {
    height: 100%;
    overflow-y: auto;
    overflow: auto;
    padding: 20px 40px 20px 60px;
  }
  .scroll-content::-webkit-scrollbar {
    display: none;
  }

  /* Custom Scrollbar */
  .scrollbar-track {
    position: absolute;
    left: 20px; /* closer to left TV frame */
    top: 10px;
    bottom: 10px;
    width: 4px;
    border: 2px dashed rgba(0,0,0,0.4);
    border-radius: 20px;
  }
  .scrollbar-thumb {
    position: absolute;
    top: 0;
    left: -8px; /* centers custom icon */
    width: 20px;
    height: 40px;
    cursor: grab;
  }
  .scrollbar-thumb:active {
    cursor: grabbing;
  }

  /* Text */
  .scroll-content h2 {
    font-size: 20px;
    font-weight: bold;
    margin: 1rem 0 0.5rem 0;
  }
  .scroll-content p {
    font-size: 16px;
    line-height: 1.5;
    margin: 0.5rem 0;
  }
  .scroll-content ul {
    margin: 0.5rem 0 1rem 1.5rem;
    padding: 0;
  }
  .scroll-content li {
    margin: 0.5rem 0;
    font-size: 16px;
    line-height: 1.5;
  }
  .page-short-description{
  color:white !important;
  padding:10px 0px;
  }
</style>

<main>
  <!-- Title & Stars -->
  <div class="title-wrap">
    <h1>{{ page.title }}</h1>
    {% if page.metafields.custom.page_short_description %}
      <p class="page-short-description">{{ page.metafields.custom.page_short_description }}</p>
    {% endif %}
    <img src="https://cdn.shopify.com/s/files/1/0897/0148/2800/files/fi_12414781.png?v=1755879460" alt="stars" style="position:absolute; top:56px; right:5px;">
  </div>

  <!-- TV Container -->
  <div class="tv-container">
    <div class="tv-screen">
      <div class="scroll-container">
        <div class="scroll-content" id="scroll-content">
          {{ page.content }}
        </div>

        <!-- Custom Scrollbar -->
        <div class="scrollbar-track" id="scrollbar-track">
          <div class="scrollbar-thumb" id="scrollbar-thumb">
            <img src="https://cdn.shopify.com/s/files/1/0897/0148/2800/files/Vector_17.png?v=1755878568" alt="scroll-indicator" style="height:30px; width:30px;">
          </div>
        </div>
      </div>
    </div>
  </div>
</main>

<script>
  const scrollContent = document.getElementById('scroll-content');
  const scrollbarTrack = document.getElementById('scrollbar-track');
  const scrollbarThumb = document.getElementById('scrollbar-thumb');

  function updateThumb() {
    const contentHeight = scrollContent.scrollHeight;
    const containerHeight = scrollContent.clientHeight;
    const scrollTop = scrollContent.scrollTop;
    const maxScroll = contentHeight - containerHeight;
    const progress = (scrollTop / maxScroll);
    const trackHeight = scrollbarTrack.clientHeight;
    const thumbHeight = scrollbarThumb.clientHeight;
    const top = Math.min(progress * (trackHeight - thumbHeight), trackHeight - thumbHeight);
    scrollbarThumb.style.top = top + 'px';
  }

  scrollContent.addEventListener('scroll', updateThumb);
  window.addEventListener('resize', updateThumb);
  updateThumb();

  // Dragging
  let dragging = false;
  scrollbarThumb.addEventListener('mousedown', e => {
    dragging = true;
    e.preventDefault();
  });
  window.addEventListener('mouseup', () => dragging = false);
  window.addEventListener('mousemove', e => {
    if (!dragging) return;
    const trackRect = scrollbarTrack.getBoundingClientRect();
    const y = e.clientY - trackRect.top;
    const trackHeight = scrollbarTrack.clientHeight;
    const thumbHeight = scrollbarThumb.clientHeight;
    let progress = (y / (trackHeight - thumbHeight));
    progress = Math.max(0, Math.min(1, progress));
    const maxScroll = scrollContent.scrollHeight - scrollContent.clientHeight;
    scrollContent.scrollTop = progress * maxScroll;
  });
</script>

{% schema %}
{
  "name": "Policies Page",
  "settings": []
}
{% endschema %} 